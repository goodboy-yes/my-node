import{_ as o,r as l,o as c,c as r,a as e,b as s,d as a,e as t}from"./app-ZrMgA43q.js";const i={},p=e("h1",{id:"技术方案",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#技术方案"},[e("span",null,"技术方案")])],-1),d=e("h2",{id:"时间库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#时间库"},[e("span",null,"时间库")])],-1),h={id:"moment-js",tabindex:"-1"},u={class:"header-anchor",href:"#moment-js"},_={href:"http://momentjs.cn/",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"最知名、最古老的 JavaScript 日期处理类库",-1),k={id:"day-js",tabindex:"-1"},v={class:"header-anchor",href:"#day-js"},g={href:"https://dayjs.fenxianglu.cn/",target:"_blank",rel:"noopener noreferrer"},b=e("p",null,"Day.js 是一个极简的 JavaScript 库，可以为现代浏览器解析、验证、操作和显示日期和时间，是 Moment.js 替代方案(自 2020 年 9 月起进入纯维护模式,不再开发新版本）",-1),f={id:"date-fns",tabindex:"-1"},j={class:"header-anchor",href:"#date-fns"},x={href:"https://date-fns.org/",target:"_blank",rel:"noopener noreferrer"},y=e("p",null,"date-fns 提供了最全面、最简单且一致的工具集，用于在浏览器和 Node.js 中操作 JavaScript 日期。",-1),S=e("h2",{id:"文件下载",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#文件下载"},[e("span",null,"文件下载")])],-1),N={id:"filesaver-js",tabindex:"-1"},J={class:"header-anchor",href:"#filesaver-js"},q={href:"https://github.com/eligrey/FileSaver.js/",target:"_blank",rel:"noopener noreferrer"},w=e("p",null,"FileSaver.js 在没有原生支持 saveAs() 的浏览器上实现了 saveAs() 接口。是文件下载的标杆项目。",-1),M=e("h2",{id:"表格解析和生成",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#表格解析和生成"},[e("span",null,"表格解析和生成")])],-1),B={id:"sheetjs",tabindex:"-1"},E={class:"header-anchor",href:"#sheetjs"},P={href:"https://github.com/SheetJS/sheetjs",target:"_blank",rel:"noopener noreferrer"},F=e("p",null,"SheetJS 是用于多种电子表格格式的解析器和编写器。通过官方规范、相关文档以及测试文件实现简洁的 JS 方法。SheetJS 强调解析和编写的稳健，其跨格式的特点和统一的 JS 规范兼容，并且 ES3/ES5 浏览器向后兼容 IE6。",-1),I=e("h2",{id:"更多-npm-包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#更多-npm-包"},[e("span",null,"更多 NPM 包")])],-1),V={href:"https://juejin.cn/post/6950584088462163982",target:"_blank",rel:"noopener noreferrer"},z=e("h2",{id:"网页离开时的请求发送",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#网页离开时的请求发送"},[e("span",null,"网页离开时的请求发送")])],-1),A={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon",target:"_blank",rel:"noopener noreferrer"},C=t('<p>这个方法主要用于满足统计和诊断代码的需要，这些代码通常尝试在卸载（unload）文档之前向 web 服务器发送数据。</p><p>同步的 <code>XMLHttpRequest</code> 迫使用户代理延迟卸载文档，并使得下一个导航出现的更晚。有一些技术被用来保证数据的发送。其中一种是通过在卸载事件处理器中创建一个图片元素并设置它的 <code>src</code> 属性的方法来延迟卸载以保证数据的发送，但会延迟卸载以保证图片的载入</p><p>使用 <code>sendBeacon()</code> 方法会使用户代理在有机会时异步地向服务器发送数据，同时不会延迟页面的卸载或影响下一导航的载入性能。这就解决了提交分析数据时的所有的问题：数据可靠，传输异步并且不会影响下一页面的加载。此外，代码实际上还要比其他技术简单许多！</p><h2 id="解决-node-modules-中第三方库-bug" tabindex="-1"><a class="header-anchor" href="#解决-node-modules-中第三方库-bug"><span>解决 node_modules 中第三方库 bug</span></a></h2><p>一般来说，解决 node_modules 中第三方库的 bug 大概有两种思路：</p>',5),D=e("li",null,[e("p",null,[s("第一种思路是将第三方库中有问题的文件 copy 一份进行修复，放在项目目录里面(非 node_modules)，然后通过构建工具 "),e("code",null,"resolve.alias"),s(" 能力重定向到修复后的位置。")])],-1),L=t(`<p>另一种是通过 <code>patch-package</code> 记录 node_modules 更改记录，生成 patches 目录，然后通过项目的 post-install 脚本在团队中同步这个更改，实现第三方库的临时 patch，当然这也适合其他第三方库问题的临时修复。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1. 安装</span>
npm i patch<span class="token operator">-</span><span class="token keyword">package</span>
<span class="token comment">//of</span>
yarn add patch<span class="token operator">-</span><span class="token keyword">package</span> postinstall<span class="token operator">-</span>postinstall

<span class="token comment">// 2. 修改 node_modules 代码后执行：</span>
yarn patch<span class="token operator">-</span><span class="token keyword">package</span> <span class="token keyword">package</span><span class="token operator">-</span><span class="token function">name</span><span class="token punctuation">(</span>修改的包名<span class="token punctuation">)</span>
<span class="token comment">//of</span>
npx patch<span class="token operator">-</span><span class="token keyword">package</span> <span class="token keyword">package</span><span class="token operator">-</span>name（npm版本 <span class="token operator">&gt;</span> <span class="token number">5.2</span>）

<span class="token comment">// 3. package.json 中 scripts 增加：</span>
<span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">**</span><span class="token operator">*</span><span class="token punctuation">,</span>
<span class="token operator">+</span>   <span class="token string">&quot;postinstall&quot;</span><span class="token operator">:</span> <span class="token string">&quot;patch-package&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>手动删除 node_modules 文件夹，重新执行 npm install 安装依赖包。可以看到在依赖包安装结束后执行了 patch-package 命令，之前生成的补丁被应用了。 最后将 patches 文件夹推送到远端仓库，日后无论是谁拉取代码，安装依赖，我们之前修改的部分都会生效的</p><p><strong>注意事项：</strong> patch 是锁定版本号的，如果升级了版本，patch 内容将会失效，最好在 package.json 能够锁定版本号。 魔改的同时，也局限了升级的能力，尽量还是去提 issue 和 PR。</p>`,4),R={href:"https://github.com/ds300/patch-package",target:"_blank",rel:"noopener noreferrer"};function T(H,O){const n=l("ExternalLinkIcon");return c(),r("div",null,[p,d,e("h3",h,[e("a",u,[e("span",null,[e("a",_,[s("Moment.js"),a(n)])])])]),m,e("h3",k,[e("a",v,[e("span",null,[e("a",g,[s("Day.js"),a(n)])])])]),b,e("h3",f,[e("a",j,[e("span",null,[e("a",x,[s("date-fns"),a(n)])])])]),y,S,e("h3",N,[e("a",J,[e("span",null,[e("a",q,[s("FileSaver.js"),a(n)])])])]),w,M,e("h3",B,[e("a",E,[e("span",null,[e("a",P,[s("sheetjs "),a(n)])])])]),F,I,e("blockquote",null,[e("p",null,[e("a",V,[s("让我告诉你一些强无敌的 NPM 软件包"),a(n)])])]),z,e("p",null,[e("a",A,[s("Navigator.sendBeacon"),a(n)])]),C,e("ul",null,[D,e("li",null,[L,e("p",null,[e("a",R,[s("patch-package-官方"),a(n)])])])])])}const X=o(i,[["render",T],["__file","technical-scheme.html.vue"]]),G=JSON.parse('{"path":"/development-practice/technical-scheme.html","title":"技术方案","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"时间库","slug":"时间库","link":"#时间库","children":[{"level":3,"title":"Moment.js","slug":"moment-js","link":"#moment-js","children":[]},{"level":3,"title":"Day.js","slug":"day-js","link":"#day-js","children":[]},{"level":3,"title":"date-fns","slug":"date-fns","link":"#date-fns","children":[]}]},{"level":2,"title":"文件下载","slug":"文件下载","link":"#文件下载","children":[{"level":3,"title":"FileSaver.js","slug":"filesaver-js","link":"#filesaver-js","children":[]}]},{"level":2,"title":"表格解析和生成","slug":"表格解析和生成","link":"#表格解析和生成","children":[{"level":3,"title":"sheetjs","slug":"sheetjs","link":"#sheetjs","children":[]}]},{"level":2,"title":"更多 NPM 包","slug":"更多-npm-包","link":"#更多-npm-包","children":[]},{"level":2,"title":"网页离开时的请求发送","slug":"网页离开时的请求发送","link":"#网页离开时的请求发送","children":[]},{"level":2,"title":"解决 node_modules 中第三方库 bug","slug":"解决-node-modules-中第三方库-bug","link":"#解决-node-modules-中第三方库-bug","children":[]}],"git":{"updatedTime":1708502740000,"contributors":[{"name":"guokc","email":"guokc@tsintergy.com","commits":1}]},"filePathRelative":"development-practice/technical-scheme.md"}');export{X as comp,G as data};
