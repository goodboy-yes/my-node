import{_ as e,o as i,c as a,e as n}from"./app-CtA61ec0.js";const s="/my-notes/assets/amend-BYy7RvWm.png",t={},c=n('<h1 id="git-commit-amend" tabindex="-1"><a class="header-anchor" href="#git-commit-amend"><span>git commit --amend</span></a></h1><p>修改提交的内容分为 2 种情况：</p><ul><li>提交了代码之后，又有新的改动，不想创建两个 commit</li><li>之前 commit message 的描述有误</li></ul><p>这时可以使用<code>git commit --amend</code>命令把新的内容添加到之前的 commit 里面，这个命令没有添加新的提交，而是用新提交取代了原始提交。</p><p><strong>操作</strong></p><ul><li><p>如果是重写 commit message，可以直接使用<code>git commit --amend -m &lt;message&gt;</code></p></li><li><p>在原有 message 上修改，执行<code>git commit --amend</code>，键入<code>:i</code>，此时进入了输入模式，可对 message 信息进行修改。修改完成后，按下 Esc 键退出编辑模式，再键入 <code>:wq</code> 回车退出并保存修改，完成提交。该操作会改变原来的 commit id。键入 <code>:q!</code> 回车不保存退出修改</p></li></ul><p><img src="'+s+`" alt=""></p><ul><li><p>当修改前几次提交时需要先分离 HEAD 到指定的节点，使用<code>git rebase</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>// 最后的数字指的是显示到倒数第几次提交
<span class="token function">git</span> rebase <span class="token parameter variable">-i</span> HEAD~2

// 想修改哪条注释，就把哪条注释前面的 pick 换成 edit

// 然后
<span class="token function">git</span> commit <span class="token parameter variable">--amend</span>

// 修改注释，保存并退出后，输入：
<span class="token function">git</span> rebase <span class="token parameter variable">--continue</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><strong>注意</strong></p><ul><li><p><code>git commit --amend</code>会把暂存区的文件自动加入</p></li><li><p><code>git commit -a --amend</code>会自动将所有已跟踪文件中的更改添加到新的提交中。这意味着无需使用 git add 命令将更改添加到暂存区，而是可以直接对这些更改进行提交。</p></li><li><p>上一次提交需要还未 push 到远程分支，不然修改完后需要强制 push。<code>git push --force</code></p></li></ul>`,10),m=[c];function o(d,l){return i(),a("div",null,m)}const p=e(t,[["render",o],["__file","commit-amend.html.vue"]]),g=JSON.parse('{"path":"/git/commit-amend.html","title":"git commit --amend","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1708503944000,"contributors":[{"name":"guokc","email":"guokc@tsintergy.com","commits":1}]},"filePathRelative":"git/commit-amend.md"}');export{p as comp,g as data};
