import{e as n}from"./app.e03103d2.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5" aria-hidden="true">#</a> \u7B97\u6CD5</h1><h2 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h2><h3 id="\u6590\u6CE2\u90A3\u5951\u6570\u5217" tabindex="-1"><a class="header-anchor" href="#\u6590\u6CE2\u90A3\u5951\u6570\u5217" aria-hidden="true">#</a> \u6590\u6CE2\u90A3\u5951\u6570\u5217</h3><p>\u6590\u6CE2\u90A3\u5951\u6570\u5217\uFF08Fibonacci sequence\uFF09\uFF0C\u53C8\u79F0\u9EC4\u91D1\u5206\u5272\u6570\u5217\uFF0C\u56E0\u6570\u5B66\u5BB6\u83B1\u6602\u7EB3\u591A\xB7\u6590\u6CE2\u90A3\u5951\uFF08Leonardoda Fibonacci\uFF09\u4EE5\u5154\u5B50\u7E41\u6B96\u4E3A\u4F8B\u5B50\u800C\u5F15\u5165\uFF0C\u6545\u53C8\u79F0\u4E3A\u201C\u5154\u5B50\u6570\u5217\u201D\uFF0C\u6307\u7684\u662F\u8FD9\u6837\u4E00\u4E2A\u6570\u5217\uFF1A</p><p>0\u30011\u30011\u30012\u30013\u30015\u30018\u300113\u300121\u300134\u3001\u2026\u2026</p><p>\u5728\u6570\u5B66\u4E0A\uFF0C\u6590\u6CE2\u90A3\u5951\u6570\u5217\u4EE5\u5982\u4E0B\u88AB\u4EE5\u9012\u63A8\u7684\u65B9\u6CD5\u5B9A\u4E49\uFF1A</p><p>F(0)=0\uFF0CF(1)=1, F(n)=F(n - 1)+F(n - 2)\uFF08n \u2265 2\uFF0Cn \u2208 N*\uFF09</p><p><strong>\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684 JS \u5B9E\u73B0</strong></p><ul><li><p>\u9012\u5F52</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">recurFib</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> n<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">recurFib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">recurFib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u9012\u5F52\u7684\u6267\u884C\u6548\u7387\u975E\u5E38\u4F4E\uFF0C\u56E0\u4E3A\u592A\u591A\u503C\u5728\u9012\u5F52\u4E2D\u88AB\u91CD\u65B0\u8BA1\u7B97\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<strong>\u52A8\u6001\u89C4\u5212</strong>\u7684\u6280\u5DE7\u6765\u8BBE\u8BA1\u4E00\u4E2A\u6548\u7387\u66F4\u9AD8\u7684\u7B97\u6CD5</p></li><li><p>\u52A8\u6001\u89C4\u5212</p><p>\u52A8\u6001\u89C4\u5212\u4ECE\u5B83\u80FD\u89E3\u51B3\u7684\u6700\u7B80\u5355\u7684\u5B50\u95EE\u9898\u5F00\u59CB\uFF0C\u7EE7\u800C\u901A\u8FC7\u5F97\u5230\u7684\u89E3\uFF0C\u53BB\u89E3\u51B3\u5176\u4ED6\u66F4\u590D\u6742\u7684\u5B50\u95EE\u9898\uFF0C\u76F4\u5230\u6574\u4E2A\u95EE\u9898\u90FD\u88AB\u89E3\u51B3\u3002\u6240\u6709\u5B50\u95EE\u9898\u7684\u89E3\u901A\u5E38\u88AB\u5B58\u50A8\u5728\u4E00\u4E2A\u6570\u7EC4\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dynFib</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> n<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    val<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      val<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> val<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> val<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E5F\u53EF\u4E0D\u4F7F\u7528\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">iterFib</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> last <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> nextLast <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> n<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> last <span class="token operator">+</span> nextLast<span class="token punctuation">;</span>
      nextLast <span class="token operator">=</span> last<span class="token punctuation">;</span>
      last <span class="token operator">=</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li></ul><blockquote><p>\u53C2\u8003\uFF1A\u300A\u6570\u636E\u7ED3\u6784\u4E0E\u7B97\u6CD5 JavaScript \u63CF\u8FF0\u300B</p></blockquote>`,10);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
