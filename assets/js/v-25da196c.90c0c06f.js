"use strict";(self.webpackChunkmy_notes=self.webpackChunkmy_notes||[]).push([[954],{7441:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-25da196c",path:"/vue2/keep-alive.html",title:"keep-alive",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"用法",slug:"用法",children:[]},{level:2,title:"使用场景",slug:"使用场景",children:[]},{level:2,title:"原理",slug:"原理",children:[]}],filePathRelative:"vue2/keep-alive.md",git:{updatedTime:1639647138e3,contributors:[]}}},1609:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var p=a(6252);const t=(0,p.uE)('<h1 id="keep-alive" tabindex="-1"><a class="header-anchor" href="#keep-alive" aria-hidden="true">#</a> keep-alive</h1><h2 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h2><p><code>&lt;keep-alive&gt;</code>组件可接收三个属性：</p><p>Props： <code>include - string | RegExp | Array</code>。只有名称匹配的组件会被缓存。 <code>exclude - string | RegExp | Array</code>。任何名称匹配的组件都不会被缓存。 <code>max - number | string</code>。最多可以缓存多少组件实例。</p><p><code>include</code> 和 <code>exclude prop</code> 允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个数组来表示：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!-- 逗号分隔字符串 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span> <span class="token attr-name">include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a,b<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>view<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- regex (使用 `v-bind`) --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span> <span class="token attr-name">:include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/a|b/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>view<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- Array (使用 `v-bind`) --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span> <span class="token attr-name">:include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[<span class="token punctuation">&#39;</span>a<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>b<span class="token punctuation">&#39;</span>]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>view<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>匹配首先检查组件自身的 name 选项，如果 name 选项不可用，则匹配它的局部注册名称 (父组件 components 选项的键值)。匿名组件不能被匹配。</p><p>max 表示最多可以缓存多少组件实例。一旦这个数字达到了，在新实例被创建之前，已缓存组件中最久没有被访问的实例会被销毁掉。</p><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><p>从首页–&gt;列表页–&gt;商品详情页–&gt;返回到列表页(需要缓存)–&gt;返回到首页(需要缓存)–&gt;再次进入列表页(不需要缓存)</p><ul><li><p>在路由 meta 对象里定义两个值：</p><p><code>keepAlive</code>：这个路由是否需要缓存</p><p><code>deepth</code>：代表页面之间的前进后退的层级关系</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token punctuation">{</span>\n       path<span class="token operator">:</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span>\n       name<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span>\n       <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/* webpackPreload: true */</span> <span class="token string">&#39;@/views/home&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n         keepAlive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n         deepth<span class="token operator">:</span> <span class="token number">1</span>\n       <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     <span class="token punctuation">{</span>\n       path<span class="token operator">:</span> <span class="token string">&#39;/list&#39;</span><span class="token punctuation">,</span>\n       name<span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>\n       <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n         keepAlive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n         deepth<span class="token operator">:</span> <span class="token number">2</span>\n       <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     <span class="token punctuation">{</span>\n       path<span class="token operator">:</span> <span class="token string">&#39;/detail&#39;</span><span class="token punctuation">,</span>\n       name<span class="token operator">:</span> <span class="token string">&#39;Detail&#39;</span><span class="token punctuation">,</span>\n       <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/detail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n         keepAlive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n         deepth<span class="token operator">:</span> <span class="token number">3</span>\n       <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><ul><li>监听路由动态控制需要缓存的值</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//3x版本router-view不允许直接写在keep-alive里面，需注意 https://next.router.vuejs.org/zh/guide/migration/#router-view-%E3%80%81-keep-alive-%E5%92%8C-transition</span>\n<span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>keep<span class="token operator">-</span>alive <span class="token operator">:</span>include<span class="token operator">=</span><span class="token string">&quot;include&quot;</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>router<span class="token operator">-</span>view v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;$route.meta.keepAlive&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>keep<span class="token operator">-</span>alive<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>router<span class="token operator">-</span>view v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;!$route.meta.keepAlive&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    watch<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">$route</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 如果要to(进入)的页面是需要keepAlive缓存的，把name push进include数组中</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>keepAlive<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>include<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>include<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">// 如果 要 form(离开) 的页面是 keepAlive缓存的，</span>\n        <span class="token comment">// 再根据 deepth 来判断是前进还是后退</span>\n        <span class="token comment">// 如果是后退：</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>from<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>keepAlive <span class="token operator">&amp;&amp;</span> to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>deepth <span class="token operator">&lt;</span> from<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>deepth<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>include<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>from<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        index <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>include<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>以上场景在通过监听路由，动态的设置了在第一次进入并回退回来时的缓存实现，并在第二次进入时重新开始进行新一轮缓存设置,实现动态控制缓存。</p><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2>',16),e=(0,p.Uk)("参考链接 "),o={href:"https://mp.weixin.qq.com/s?__biz=MzU0OTExNzYwNg==&mid=2247492067&idx=1&sn=afd964fce52e360310362ffde61033ab&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("聊聊 vue 中的 keep-alive"),l={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("blockquote",null,[(0,p._)("p",null,[e,(0,p._)("a",o,[c,(0,p.Wm)(a)])])])],64)}}}}]);