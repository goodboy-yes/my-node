"use strict";(self.webpackChunkmy_notes=self.webpackChunkmy_notes||[]).push([[740],{9427:(e,n,l)=>{l.r(n),l.d(n,{data:()=>s});const s={key:"v-1f875f88",path:"/git/commit-standard.html",title:"commit 规范",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"为什么我们需要 commit 规范？",slug:"为什么我们需要-commit-规范",children:[]},{level:2,title:"commit message 的内容",slug:"commit-message-的内容",children:[]},{level:2,title:"commit message 的格式",slug:"commit-message-的格式",children:[{level:3,title:"header",slug:"header",children:[]},{level:3,title:"body",slug:"body",children:[]},{level:3,title:"footer",slug:"footer",children:[]}]},{level:2,title:"在 commit message 里用 emoji",slug:"在-commit-message-里用-emoji",children:[]},{level:2,title:"集成 Commitizen 实现规范提交",slug:"集成-commitizen-实现规范提交",children:[]},{level:2,title:"集成 commitlint 验证提交规范",slug:"集成-commitlint-验证提交规范",children:[]}],filePathRelative:"git/commit-standard.md",git:{updatedTime:1631548407e3,contributors:[]}}},3893:(e,n,l)=>{l.r(n),l.d(n,{default:()=>ke});var s=l(6252),a=l(145);const i=(0,s._)("h1",{id:"commit-规范",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#commit-规范","aria-hidden":"true"},"#"),(0,s.Uk)(" commit 规范")],-1),r=(0,s._)("p",null,"现在主流的 commit message 规范就是 Angular 团队所用的准则，很多工具也是基于此规范。",-1),m=(0,s._)("h2",{id:"为什么我们需要-commit-规范",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#为什么我们需要-commit-规范","aria-hidden":"true"},"#"),(0,s.Uk)(" 为什么我们需要 commit 规范？")],-1),t=(0,s._)("ul",null,[(0,s._)("li",null,"格式统一的提交信息可以帮助自动化生成 changelog，版本库不只是存放代码的仓库, 也记录项目的开发记录。"),(0,s._)("li",null,"这些记录可以帮助后来者快速地学习和回顾代码。也方便其他协作者 review 你的代码")],-1),c=(0,s._)("h2",{id:"commit-message-的内容",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#commit-message-的内容","aria-hidden":"true"},"#"),(0,s.Uk)(" commit message 的内容")],-1),_=(0,s._)("ul",null,[(0,s._)("li",null,"为什么进行这次提交？提交改变了什么, 让其他 reviewer 更容易审核代码和忽略无关的改变，一个提交不应该做超过 2 个功能的变动"),(0,s._)("li",null,"如何解决的问题？问题是什么导致的？简短说明使用什么方式、策略修复了问题，变化可能影响哪些地方")],-1),u=(0,s._)("h2",{id:"commit-message-的格式",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#commit-message-的格式","aria-hidden":"true"},"#"),(0,s.Uk)(" commit message 的格式")],-1),o=(0,s._)("p",null,"每次提交，Commit message 都包括三个部分：header，body 和 footer，其中 header 有一个特殊的格式，包括了 type、scope、subject。",-1),b=(0,s._)("p",null,"header 是必选的，但是 header 里的 scope 是可选的",-1),p=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,"<type>(<scope>): <subject>\n<body>\n<footer>\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br")])],-1),d=(0,s._)("h3",{id:"header",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#header","aria-hidden":"true"},"#"),(0,s.Uk)(" header")],-1),g=(0,s._)("p",null,[(0,s._)("strong",null,"type")],-1),h=(0,s._)("p",null,"type 指明 git commit 的类别，应该使用以下类型",-1),f=(0,s._)("ul",null,[(0,s._)("li",null,"『feat』: 新增功能"),(0,s._)("li",null,"『fix』: 修复 bug"),(0,s._)("li",null,"『docs』: 仅仅修改了文档，比如 README, CHANGELOG 等等"),(0,s._)("li",null,"『test』: 增加/修改测试用例，包括单元测试、集成测试等"),(0,s._)("li",null,"『style』: 修改了空行、缩进格式、引用包排序、优化项目结构等等（不改变代码逻辑），注意不是 css 修改"),(0,s._)("li",null,"『perf』: 优化相关内容，比如提升性能、体验、算法等"),(0,s._)("li",null,"『refactor』: 代码重构，「没有新功能或者 bug 修复」"),(0,s._)("li",null,"『chore』: 改变构建流程、或者增加依赖库、工具等"),(0,s._)("li",null,"『revert』: 回滚到上一个版本"),(0,s._)("li",null,"『merge』: 代码合并"),(0,s._)("li",null,"『Build 或 Release』: 构建或发布版本"),(0,s._)("li",null,"『CI』: 持续集成"),(0,s._)("li",null,"『Safe』: 修复安全问题"),(0,s._)("li",null,"『workflow』: 工作流相关文件修改")],-1),x=(0,s._)("p",null,[(0,s._)("strong",null,"scope（可选）")],-1),k=(0,s._)("p",null,"scope 用于说明 commit 影响的范围，根据不同项目有不同层次描述。若没有特殊规定，也可以描述影响的哪些功能等，例如样式, 后端接口, 逻辑层等等，route, component, utils, build...",-1),v=(0,s._)("p",null,[(0,s._)("strong",null,"subject")],-1),z=(0,s._)("p",null,"subject 是 commit 目的的简短描述，不超过 50/80 个字符，结尾不加标点符号",-1),y=(0,s._)("h3",{id:"body",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#body","aria-hidden":"true"},"#"),(0,s.Uk)(" body")],-1),U=(0,s._)("p",null,"可选. 对本次提交的详细描述. 如果变动很简单, 可以省略",-1),j=(0,s._)("h3",{id:"footer",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#footer","aria-hidden":"true"},"#"),(0,s.Uk)(" footer")],-1),C=(0,s._)("p",null,"可选. 只用于说明不兼容变动(break change)和关闭 Issue(如果使用 gitlab 上的 Issuse，#1542)或禅道 BUG 号(#zentao203)",-1),w=(0,s._)("h2",{id:"在-commit-message-里用-emoji",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#在-commit-message-里用-emoji","aria-hidden":"true"},"#"),(0,s.Uk)(" 在 commit message 里用 emoji")],-1),E=(0,s._)("p",null,"在 git commit 上使用 emoji 提供了一种简单的方法，仅通过查看所使用的表情符号来确定提交的目的或意图",-1),S=(0,s._)("div",{class:"language-git ext-git line-numbers-mode"},[(0,s._)("pre",{class:"language-git"},[(0,s._)("code",null,[(0,s._)("span",{class:"token command"},[(0,s.Uk)("$ git commit"),(0,s._)("span",{class:"token parameter"}," -m"),(0,s.Uk)()]),(0,s._)("span",{class:"token string"},"':tada: init commit'"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),A={href:"https://gitmoji.dev/",target:"_blank",rel:"noopener noreferrer"},D=(0,s.Uk)("gitmoji 指南"),I=(0,s._)("p",null,[(0,s._)("strong",null,"各种表情代码代表的含义")],-1),T=(0,s._)("p",null,[(0,s._)("img",{src:a,alt:"emoji"})],-1),L=(0,s._)("h2",{id:"集成-commitizen-实现规范提交",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#集成-commitizen-实现规范提交","aria-hidden":"true"},"#"),(0,s.Uk)(" 集成 Commitizen 实现规范提交")],-1),N=(0,s._)("p",null,"上面介绍了 Angular 规范提交的格式，初次接触会觉得复杂，记不住不同的类型到底是用来定义什么，我们可以使用 Commitizen 工具来帮助我们自动生成 commit message 格式，从而实现规范提交。",-1),O=(0,s._)("blockquote",null,[(0,s._)("p",null,"Commitizen 是一个帮助撰写规范 commit message 的工具。它有一个命令行工具 cz-cli。")],-1),R=(0,s._)("p",null,[(0,s._)("strong",null,"安装 Commitizen")],-1),B=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,"npm install commitizen -D\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),P=(0,s._)("p",null,[(0,s._)("strong",null,"初始化项目")],-1),$=(0,s._)("p",null,[(0,s.Uk)("成功安装 Commitizen 后，我们用 "),(0,s._)("code",null,"cz-conventional-changelog"),(0,s.Uk)(" 适配器来初始化项目：")],-1),q=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,"npx commitizen init cz-conventional-changelog --save-dev --save-exact\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),G=(0,s._)("p",null,"这行命令做了两件事：",-1),W=(0,s._)("ul",null,[(0,s._)("li",null,[(0,s.Uk)("安装 "),(0,s._)("code",null,"cz-conventional-changelog"),(0,s.Uk)(" 到开发依赖（devDependencies）")]),(0,s._)("li",null,"在 package.json 中增加了 config.commitizen")],-1),F=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,'"config": {\n    "commitizen": {\n        "path": "./node_modules/cz-conventional-changelog"\n    }\n}\n')]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br")])],-1),H=(0,s._)("p",null,[(0,s._)("strong",null,"使用 Commitizen")],-1),M=(0,s._)("p",null,[(0,s.Uk)("以前我们提交代码都是 "),(0,s._)("code",null,'git commit -m "xxx"'),(0,s.Uk)("，现在改为 "),(0,s._)("code",null,"git cz"),(0,s.Uk)("，然后按照终端操作提示，逐步填入信息，就能自动生成规范的 commit message。")],-1),K=(0,s._)("p",null,[(0,s._)("strong",null,"自定义配置提交说明")],-1),Q=(0,s._)("p",null,"git cz 终端操作提示都是英文的，如果想改成中文的或者自定义这些配置选项，我们使用 cz-customizable 适配器",-1),V=(0,s._)("p",null,"运行如下命令使用 cz-customizable 初始化项目，注意之前已经初始化过一次，这次再初始化，需要加 --force 覆盖。",-1),X=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,"npx commitizen init cz-customizable --save-dev --save-exact --force\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),Y=(0,s._)("p",null,"这行命令做了两件事：",-1),J=(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,"安装 cz-customizable 到开发依赖（devDependencies）")]),(0,s._)("li",null,[(0,s._)("p",null,"修改 package.json 中的 config.commitizen 字段为：")])],-1),Z=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,'"config": {\n  "commitizen": {\n    "path": "./node_modules/cz-customizable"\n  }\n}\n')]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br")])],-1),ee=(0,s._)("p",null,[(0,s._)("strong",null,"使用 cz-customizable")],-1),ne=(0,s.Uk)("在项目根目录下创建 .cz-config.js 文件，然后按照官方提供的"),le={href:"https://github.com/leoforfree/cz-customizable/blob/master/cz-config-EXAMPLE.js",target:"_blank",rel:"noopener noreferrer"},se=(0,s.Uk)("示例"),ae=(0,s.Uk)("来配置"),ie=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,"module.exports = {\n  // type 类型（定义之后，可通过上下键选择）\n  types: [\n    { value: 'feat', name: 'feat:     新增功能' },\n    { value: 'fix', name: 'fix:      修复 bug' },\n    { value: 'docs', name: 'docs:     文档变更' },\n    { value: 'style', name: 'style:    代码格式（不影响功能，例如空格、分号等格式修正）' },\n    { value: 'refactor', name: 'refactor: 代码重构（不包括 bug 修复、功能新增）' },\n    { value: 'perf', name: 'perf:     性能优化' },\n    { value: 'test', name: 'test:     添加、修改测试用例' },\n    { value: 'build', name: 'build:    构建流程、外部依赖变更（如升级 npm 包、修改 webpack 配置等）' },\n    { value: 'ci', name: 'ci:       修改 CI 配置、脚本' },\n    { value: 'chore', name: 'chore:    对构建过程或辅助工具和库的更改（不影响源文件、测试用例）' },\n    { value: 'revert', name: 'revert:   回滚 commit' }\n  ],\n\n  // scope 类型（定义之后，可通过上下键选择）\n  scopes: [\n    ['components', '组件相关'],\n    ['hooks', 'hook 相关'],\n    ['utils', 'utils 相关'],\n    ['element-ui', '对 element-ui 的调整'],\n    ['styles', '样式相关'],\n    ['deps', '项目依赖'],\n    ['auth', '对 auth 修改'],\n    ['other', '其他修改'],\n    // 如果选择 custom，后面会让你再输入一个自定义的 scope。也可以不设置此项，把后面的 allowCustomScopes 设置为 true\n    ['custom', '以上都不是？我要自定义']\n  ].map(([value, description]) => {\n    return {\n      value,\n      name: `${value.padEnd(30)} (${description})`\n    }\n  }),\n\n  // 是否允许自定义填写 scope，在 scope 选择的时候，会有 empty 和 custom 可以选择。\n  // allowCustomScopes: true,\n\n  // allowTicketNumber: false,\n  // isTicketNumberRequired: false,\n  // ticketNumberPrefix: 'TICKET-',\n  // ticketNumberRegExp: '\\\\d{1,5}',\n\n\n  // 针对每一个 type 去定义对应的 scopes，例如 fix\n  /*\n  scopeOverrides: {\n    fix: [\n      { name: 'merge' },\n      { name: 'style' },\n      { name: 'e2eTest' },\n      { name: 'unitTest' }\n    ]\n  },\n  */\n\n  // 交互提示信息\n  messages: {\n    type: '确保本次提交遵循 Angular 规范！\\n选择你要提交的类型：',\n    scope: '\\n选择一个 scope（可选）：',\n    // 选择 scope: custom 时会出下面的提示\n    customScope: '请输入自定义的 scope：',\n    subject: '填写简短精炼的变更描述：\\n',\n    body:\n      '填写更加详细的变更描述（可选）。使用 \"|\" 换行：\\n',\n    breaking: '列举非兼容性重大的变更（可选）：\\n',\n    footer: '列举出所有变更的 ISSUES CLOSED（可选）。 例如: #31, #34：\\n',\n    confirmCommit: '确认提交？'\n  },\n\n  // 设置只有 type 选择了 feat 或 fix，才询问 breaking message\n  allowBreakingChanges: ['feat', 'fix'],\n\n  // 跳过要询问的步骤\n  skipQuestions: ['body', 'footer'],\n\n  // subject 限制长度\n  subjectLimit: 100\n  breaklineChar: '|', // 支持 body 和 footer\n  // footerPrefix : 'ISSUES CLOSED:'\n  // askForBreakingChangeFirst : true,\n}\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"10"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"11"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"12"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"13"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"14"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"15"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"16"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"17"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"18"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"19"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"20"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"21"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"22"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"23"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"24"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"25"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"26"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"27"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"28"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"29"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"30"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"31"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"32"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"33"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"34"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"35"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"36"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"37"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"38"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"39"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"40"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"41"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"42"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"43"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"44"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"45"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"46"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"47"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"48"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"49"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"50"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"51"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"52"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"53"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"54"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"55"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"56"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"57"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"58"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"59"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"60"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"61"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"62"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"63"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"64"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"65"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"66"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"67"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"68"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"69"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"70"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"71"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"72"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"73"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"74"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"75"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"76"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"77"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"78"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"79"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"80"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"81"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"82"),(0,s._)("br")])],-1),re=(0,s._)("p",null,"结合项目实际情况来自定义配置提交规则",-1),me=(0,s._)("h2",{id:"集成-commitlint-验证提交规范",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#集成-commitlint-验证提交规范","aria-hidden":"true"},"#"),(0,s.Uk)(" 集成 commitlint 验证提交规范")],-1),te=(0,s._)("p",null,[(0,s.Uk)("在多人协作的项目中，会有些人不按规范提交，我们可以在提交代码这个环节加以限制：只让符合 Angular 规范的 commit message 通过，我们借助 "),(0,s._)("code",null,"@commitlint/config-conventional"),(0,s.Uk)(" 和 "),(0,s._)("code",null,"@commitlint/cli"),(0,s.Uk)(" 来实现。")],-1),ce=(0,s._)("p",null,[(0,s._)("strong",null,"配置 commitlint")],-1),_e=(0,s._)("p",null,[(0,s.Uk)("在项目根目录下创建 "),(0,s._)("code",null,"commitlint.config.js"),(0,s.Uk)(" 文件，并填入以下内容：")],-1),ue=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,"module.exports = { extends: ['@commitlint/config-conventional'] }\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),oe=(0,s._)("p",null,[(0,s._)("strong",null,"使用 husky 的 commit-msg hook 触发验证提交信息的命令")],-1),be=(0,s._)("p",null,"我们使用 husky 命令在 .husky 目录下创建 commit-msg 文件，并在此执行 commit message 的验证命令。",-1),pe=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,'npx husky add .husky/commit-msg "npx --no-install commitlint --edit $1"\n')]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),de=(0,s._)("p",null,"这时不符合规范的提交信息会提交失败",-1),ge=(0,s._)("hr",null,null,-1),he=(0,s._)("p",null,"参考链接",-1),fe={href:"https://juejin.cn/post/6951649464637636622#heading-28",target:"_blank",rel:"noopener noreferrer"},xe=(0,s.Uk)("从 0 开始手把手带你搭建一套规范的 Vue3.x 项目工程环境"),ke={render:function(e,n){const l=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[i,r,m,t,c,_,u,o,b,p,d,g,h,f,x,k,v,z,y,U,j,C,w,E,S,(0,s._)("p",null,[(0,s._)("a",A,[D,(0,s.Wm)(l)])]),I,T,L,N,O,R,B,P,$,q,G,W,F,H,M,K,Q,V,X,Y,J,Z,ee,(0,s._)("p",null,[ne,(0,s._)("a",le,[se,(0,s.Wm)(l)]),ae]),ie,re,me,te,ce,_e,ue,oe,be,pe,de,ge,(0,s._)("blockquote",null,[he,(0,s._)("p",null,[(0,s._)("a",fe,[xe,(0,s.Wm)(l)])])])],64)}}},145:(e,n,l)=>{e.exports=l.p+"assets/img/emoji.de535c16.webp"}}]);