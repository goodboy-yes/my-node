"use strict";(self.webpackChunkmy_notes=self.webpackChunkmy_notes||[]).push([[334],{8074:(e,i,t)=>{t.r(i),t.d(i,{data:()=>d});const d={key:"v-374cb97a",path:"/git/basic-command.html",title:"基本命令",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"git/basic-command.md",git:{updatedTime:162973555e4,contributors:[]}}},241:(e,i,t)=>{t.r(i),t.d(i,{default:()=>c});const d=(0,t(6252).uE)('<h1 id="基本命令" tabindex="-1"><a class="header-anchor" href="#基本命令" aria-hidden="true">#</a> 基本命令</h1><ul><li><code>git init</code>：用于初始化一个 Git 仓库</li><li><code>git status</code>：用于查看当前 Git 状态</li><li><code>git add</code>：它的使用场景有三个：1、将一个尚未被 Git 跟踪的文件纳入 Git 跟踪；2、将一个已经被 Git 跟踪的文件且这个文件处于修改状态，通过 add，可以将它纳入暂存区；3、将 merge 或者 rebase 后产生的冲突文件标记为冲突已解决。</li><li><code>git commit</code>：将暂存区内容纳入 Git 提交记录</li><li><code>git restore</code>：取消对某个文件的修改</li><li><code>git diff</code>：查看文件修改详情</li><li><code>git checkout</code>：切换分支</li><li><code>git branch</code>：新建分支</li><li><code>git merge</code>：合并分支</li><li><code>git stash</code>：临时保存当前分支的工作状态，方便切换到其它分支。恢复-<code>git stash pop</code></li><li><code>git revert</code>：撤销某次修改，此次操作之前和之后的 commit 和 history 都会保留，并且把这次撤销，作为一次最新的提交</li><li><code>git reset</code>：回退版本，可以遗弃不再使用的提交</li></ul>',2),c={render:function(e,i){return d}}}}]);