"use strict";(self.webpackChunkmy_notes=self.webpackChunkmy_notes||[]).push([[126],{2924:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-852f40ca",path:"/js/code-style.html",title:"代码风格",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"社区代码风格指南",slug:"社区代码风格指南",children:[]},{level:2,title:"无分号的代码风格",slug:"无分号的代码风格",children:[]},{level:2,title:"搞懂 editorconfig、 ESLint 和 Prettier",slug:"搞懂-editorconfig、-eslint-和-prettier",children:[{level:3,title:"editorconfig",slug:"editorconfig",children:[]},{level:3,title:"Prettier",slug:"prettier",children:[]},{level:3,title:"ESLint",slug:"eslint",children:[]},{level:3,title:"解决 Prettier 和 ESLint 的冲突",slug:"解决-prettier-和-eslint-的冲突",children:[]}]}],filePathRelative:"js/code-style.md",git:{updatedTime:1630859127e3,contributors:[]}}},1684:(n,s,a)=>{a.r(s),a.d(s,{default:()=>N});var e=a(6252);const t=(0,e._)("h1",{id:"代码风格",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#代码风格","aria-hidden":"true"},"#"),(0,e.Uk)(" 代码风格")],-1),p=(0,e._)("h2",{id:"社区代码风格指南",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#社区代码风格指南","aria-hidden":"true"},"#"),(0,e.Uk)(" 社区代码风格指南")],-1),o=(0,e._)("p",null,"为了约定大家的代码风格，在社区中诞生了一些比较规范的代码风格指南：",-1),r={href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("Airbnb"),i={href:"https://github.com/standard/standard",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("Standard"),u={href:"https://google.github.io/styleguide/jsguide.html",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("Google"),k=(0,e.uE)('<p><strong>这三份 JavaScript 代码风格指南值得我们反复学习，掌握后，编程能力能上一大台阶。</strong></p><h2 id="无分号的代码风格" tabindex="-1"><a class="header-anchor" href="#无分号的代码风格" aria-hidden="true">#</a> 无分号的代码风格</h2><p>当采用了无分号的代码风格时，以(、[、`开头需要在前面补上一个分号用以避免一些语法解析错误。所以你会发现在一些第三方的代码中能看到一上来就以一个 ; 开头。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">hello</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="搞懂-editorconfig、-eslint-和-prettier" tabindex="-1"><a class="header-anchor" href="#搞懂-editorconfig、-eslint-和-prettier" aria-hidden="true">#</a> 搞懂 editorconfig、 ESLint 和 Prettier</h2><h3 id="editorconfig" tabindex="-1"><a class="header-anchor" href="#editorconfig" aria-hidden="true">#</a> editorconfig</h3><h4 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h4><p>帮助项目中使用不同 IDE 工具的开发者，维持固定统一的代码风格。例如按 Tab 键光标缩进多少空格数等</p><h4 id="使用-vscode" tabindex="-1"><a class="header-anchor" href="#使用-vscode" aria-hidden="true">#</a> 使用（VSCode）</h4>',9),b=(0,e._)("li",null,[(0,e._)("p",null,[(0,e.Uk)("安装"),(0,e._)("code",null,"EditorConfig for VS Code"),(0,e.Uk)("插件")])],-1),m=(0,e.Uk)("添加配置文件，在项目根目录下增加 "),g=(0,e._)("code",null,".editorconfig",-1),h=(0,e.Uk)(" 文件，以下是配置示例，更多配置详情查看 "),v={href:"http://editorconfig.org",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("http://editorconfig.org"),_=(0,e.uE)('<div class="language-editorconfig ext-editorconfig line-numbers-mode"><pre class="language-editorconfig"><code><span class="token comment"># 表示是最顶层的 EditorConfig 配置文件</span>\n<span class="token property">root</span> <span class="token value string"><span class="token punctuation">=</span> true</span>\n\n<span class="token section keyword"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span></span> <span class="token comment"># 表示所有文件适用</span>\n<span class="token property">charset</span> <span class="token value string"><span class="token punctuation">=</span> utf-8 </span><span class="token comment"># 设置文件字符集为 utf-8</span>\n<span class="token property">indent_style</span> <span class="token value string"><span class="token punctuation">=</span> space </span><span class="token comment"># 缩进风格（tab | space）</span>\n<span class="token property">indent_size</span> <span class="token value string"><span class="token punctuation">=</span> 2 </span><span class="token comment"># 缩进大小</span>\n<span class="token property">end_of_line</span> <span class="token value string"><span class="token punctuation">=</span> lf </span><span class="token comment"># 控制换行类型(lf | cr | crlf)</span>\n<span class="token property">trim_trailing_whitespace</span> <span class="token value string"><span class="token punctuation">=</span> true </span><span class="token comment"># 去除行首的任意空白字符</span>\n<span class="token property">insert_final_newline</span> <span class="token value string"><span class="token punctuation">=</span> true </span><span class="token comment"># 始终在文件末尾插入一个新行</span>\n\n<span class="token section keyword"><span class="token punctuation">[</span><span class="token operator">*</span>.md<span class="token punctuation">]</span></span> <span class="token comment"># 表示仅 md 文件适用以下规则</span>\n<span class="token property">max_line_length</span> <span class="token value string"><span class="token punctuation">=</span> off</span>\n<span class="token property">trim_trailing_whitespace</span> <span class="token value string"><span class="token punctuation">=</span> false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',1),S=(0,e.uE)('<h3 id="prettier" tabindex="-1"><a class="header-anchor" href="#prettier" aria-hidden="true">#</a> Prettier</h3><h4 id="定义-1" tabindex="-1"><a class="header-anchor" href="#定义-1" aria-hidden="true">#</a> 定义</h4><p>一款强大的代码格式化工具，支持 <code>JavaScript、TypeScript、CSS、SCSS、Less、JSX、Angular、Vue、GraphQL、JSON、Markdown</code> 等语言。Prettier 关注<strong>代码格式</strong>问题，如使用单引号还是双引号、单行长度等</p><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h4>',4),x=(0,e.uE)('<li><p>安装 Prettier</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i prettier -D\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>安装<strong>Prettier - Code formatter</strong>插件（VSCode）</p></li>',2),q=(0,e.Uk)("创建 Prettier 配置文件，以下是配置示例，更多配置详情查看 "),y={href:"https://link.juejin.cn/?target=https%3A%2F%2Fprettier.io%2Fdocs%2Fen%2Foptions.html",target:"_blank",rel:"noopener noreferrer"},E=(0,e.Uk)("Prettier-Options"),j=(0,e.Uk)(" 。"),L=(0,e.uE)('<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;useTabs&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//用制表符而不是空格缩进行</span>\n  <span class="token property">&quot;tabWidth&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">//指定每个缩进级别的空格数</span>\n  <span class="token property">&quot;printWidth&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// 行长度</span>\n  <span class="token property">&quot;singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 使用单引号代替双引号</span>\n  <span class="token property">&quot;trailingComma&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 尾随逗号</span>\n  <span class="token property">&quot;bracketSpacing&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 在对象文字中的括号之间打印空格</span>\n  <span class="token property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 是否在每条语句的末尾添加一个分号。</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',1),U=(0,e.uE)('<li><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 格式化所有文件（. 表示所有文件）\nnpx prettier --write .\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>配置完后使用编辑器的格式化功能时，编辑器会按照配置文件进行格式化</p></li>',1),P=(0,e.uE)('<h3 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint" aria-hidden="true">#</a> ESLint</h3><h4 id="定义-2" tabindex="-1"><a class="header-anchor" href="#定义-2" aria-hidden="true">#</a> 定义</h4><p><strong>ESLint</strong>是一款用于查找并报告代码中问题的工具，关注点是<strong>代码质量</strong>和<strong>代码格式</strong>，可以进行错误提示和自动修复，其核心是通过对代码解析得到的 AST（Abstract Syntax Tree 抽象语法树）进行模式匹配，来分析代码达到检查代码质量和风格问题的能力。</p><p><strong>代码质量问题：使用方式有可能有问题(problematic patterns)</strong>，如禁止未使用的变量、禁止不必要的函数绑定、全局变量声明等问题</p><p><strong>代码风格问题：风格不符合一定规则 (doesn’t adhere to certain style guidelines)</strong>，如单双引号，末尾分号等</p><h4 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1" aria-hidden="true">#</a> 使用</h4>',6),w=(0,e.uE)('<li><p>安装 ESLint</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i eslint -D\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>下载<strong>ESLint</strong>插件（VSCode）</p></li>',2),C=(0,e._)("p",null,"配置 ESLint",-1),A=(0,e._)("p",null,[(0,e.Uk)("ESLint 安装成功后，执行 "),(0,e._)("code",null,"npx eslint --init"),(0,e.Uk)("，然后按照终端操作提示完成一系列设置来创建配置文件。")],-1),W=(0,e.Uk)("ESLint 为我们列出了三种社区流行的 JavaScript 风格指南，分别是 "),J={href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"},T=(0,e.Uk)("Airbnb"),V=(0,e.Uk)("、"),D={href:"https://github.com/standard/standard",target:"_blank",rel:"noopener noreferrer"},F=(0,e.Uk)("Standard"),O=(0,e.Uk)("、Google。 GitHub 上 star 最多的是 Airbnb，可以直接选用 Airbnb，免去繁琐的配置 ESLint 规则时间，然后让团队成员去学习 Airbnb JavaScript 风格指南即可。"),G=(0,e.uE)('<p>配置完成后会在根目录生成<code>.eslintrc.js</code>，根据项目实际情况，如果我们有额外的 ESLint 规则，也在此文件中追加。</p><p>例如：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  env<span class="token operator">:</span> <span class="token punctuation">{</span>\n    browser<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    es2021<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    node<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;plugin:vue/essential&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;airbnb-base&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  parserOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n    ecmaVersion<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n    parser<span class="token operator">:</span> <span class="token string">&quot;@typescript-eslint/parser&quot;</span><span class="token punctuation">,</span>\n    sourceType<span class="token operator">:</span> <span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;@typescript-eslint&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  rules<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',3),z=(0,e.uE)('<li><p>设置保存自动格式化</p><p>VSCode 在 <code>settings.json</code> 设置文件中，增加以下代码：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token string">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;source.fixAll.eslint&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>',1),H=(0,e.uE)('<h3 id="解决-prettier-和-eslint-的冲突" tabindex="-1"><a class="header-anchor" href="#解决-prettier-和-eslint-的冲突" aria-hidden="true">#</a> 解决 Prettier 和 ESLint 的冲突</h3><p>但在项目中同时使用<code>Prettier</code> 和 <code>ESLint</code>时，规则可能关于发生冲突。例如<code>Airbnb JavaScript</code> 风格中代码结束后面要加分号，<code>Prettier</code> 配置文件中如果加了代码结束后面不加分号的配置项，这样就有冲突了，会出现用 <code>Prettier</code> 格式化后的代码，<code>ESLint</code> 检测到格式有问题的，从而抛出错误提示。</p><p>解决两者冲突问题，需要用到 <strong>eslint-plugin-prettier</strong> 和 <strong>eslint-config-prettier</strong>。</p><ul><li><code>eslint-plugin-prettier</code> 将 Prettier 的规则设置到 ESLint 的规则中。</li><li><code>eslint-config-prettier</code> 关闭 ESLint 中与 Prettier 中会发生冲突的规则。</li></ul><p>最后形成优先级：<code>Prettier 配置规则</code> &gt; <code>ESLint 配置规则</code>。</p><p><strong>使用</strong></p><ul><li><p>安装插件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i eslint-plugin-prettier eslint-config-prettier -D\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>在 <code>.eslintrc.js</code> 添加 prettier 插件</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span>\n  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&#39;plugin:prettier/recommended&#39;</span> <span class="token comment">// 添加 prettier 插件</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul><p>这样，我们在执行 <code>eslint --fix</code> 命令时，ESLint 就会按照 Prettier 的配置规则来格式化代码</p>',8),N={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,p,o,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",r,[l,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",i,[c,(0,e.Wm)(a)])]),(0,e._)("li",null,[(0,e._)("a",u,[d,(0,e.Wm)(a)])])]),k,(0,e._)("ul",null,[b,(0,e._)("li",null,[(0,e._)("p",null,[m,g,h,(0,e._)("a",v,[f,(0,e.Wm)(a)])]),_])]),S,(0,e._)("ul",null,[x,(0,e._)("li",null,[(0,e._)("p",null,[q,(0,e._)("a",y,[E,(0,e.Wm)(a)]),j]),L]),U]),P,(0,e._)("ul",null,[w,(0,e._)("li",null,[C,A,(0,e._)("p",null,[W,(0,e._)("a",J,[T,(0,e.Wm)(a)]),V,(0,e._)("a",D,[F,(0,e.Wm)(a)]),O]),G]),z]),H],64)}}}}]);