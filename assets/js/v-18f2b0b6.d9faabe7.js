"use strict";(self.webpackChunkmy_notes=self.webpackChunkmy_notes||[]).push([[95],{9868:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-18f2b0b6",path:"/js/file-operation.html",title:"文件操作",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Blob",slug:"blob",children:[{level:3,title:"定义",slug:"定义",children:[]},{level:3,title:"Blob URL/Object URL",slug:"blob-url-object-url",children:[]},{level:3,title:"Blob vs ArrayBuffer",slug:"blob-vs-arraybuffer",children:[]}]}],filePathRelative:"js/file-operation.md",git:{updatedTime:1635693403e3,contributors:[]}}},9297:(n,a,s)=>{s.r(a),s.d(a,{default:()=>R});var e=s(6252),l=s(8821);const t=(0,e._)("h1",{id:"文件操作",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#文件操作","aria-hidden":"true"},"#"),(0,e.Uk)(" 文件操作")],-1),o=(0,e._)("h2",{id:"blob",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#blob","aria-hidden":"true"},"#"),(0,e.Uk)(" Blob")],-1),r=(0,e._)("h3",{id:"定义",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#定义","aria-hidden":"true"},"#"),(0,e.Uk)(" 定义")],-1),c=(0,e._)("p",null,"Blob（Binary Large Object）表示二进制类型的大对象。在数据库管理系统中，将二进制数据存储为一个单一个体的集合。Blob 通常是影像、声音或多媒体文件。",-1),u=(0,e._)("p",null,"在 JavaScript 中 Blob 类型的对象表示不可变的类似文件对象的原始数据。",-1),p=(0,e._)("p",null,"Blob 由一个可选的字符串 type（通常是 MIME 类型）和 blobParts 组成：",-1),k=(0,e._)("p",null,[(0,e._)("img",{src:l,alt:""})],-1),_=(0,e._)("blockquote",null,[(0,e._)("p",null,"MIME（Multipurpose Internet Mail Extensions）多用途互联网邮件扩展类型，是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。"),(0,e._)("p",null,"常见的 MIME 类型有：超文本标记语言文本 .html text/html、PNG 图像 .png image/png、普通文本 .txt text/plain 等。")],-1),i=(0,e._)("h3",{id:"blob-url-object-url",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#blob-url-object-url","aria-hidden":"true"},"#"),(0,e.Uk)(" Blob URL/Object URL")],-1),b=(0,e._)("p",null,"Blob URL/Object URL 是一种伪协议，允许 Blob 和 File 对象用作图像，下载二进制数据链接等的 URL 源。",-1),U=(0,e._)("p",null,[(0,e.Uk)("浏览器内部为每个通过 "),(0,e._)("code",null,"URL.createObjectURL"),(0,e.Uk)(" 生成的 URL 存储了一个 URL → Blob 映射。生成的 URL 仅在当前文档打开的状态下才有效。但如果你访问的 Blob URL 不再存在，则会从浏览器中收到 404 错误。")],-1),d=(0,e._)("p",null,"映射在文档卸载时自动清除，因此 Blob 对象随后被释放。但是，如果应用程序寿命很长，那不会很快发生。因此，如果我们创建一个 Blob URL，即使不再需要该 Blob，它也会存在内存中。",-1),f=(0,e._)("p",null,[(0,e.Uk)("针对这个问题，我们可以调用 "),(0,e._)("code",null,"URL.revokeObjectURL(url)"),(0,e.Uk)(" 方法，从内部映射中删除引用，从而允许删除 Blob（如果没有其他引用），并释放内存。")],-1),h=(0,e._)("h3",{id:"blob-vs-arraybuffer",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#blob-vs-arraybuffer","aria-hidden":"true"},"#"),(0,e.Uk)(" Blob vs ArrayBuffer")],-1),B=(0,e._)("p",null,"ArrayBuffer 对象用于表示通用的，固定长度的原始二进制数据缓冲区。你不能直接操纵 ArrayBuffer 的内容，而是需要创建一个 TypedArray 对象或 DataView 对象，该对象以特定格式表示缓冲区，并使用该对象读取和写入缓冲区的内容。",-1),m=(0,e._)("p",null,"Blob 对象与 ArrayBuffer 对象拥有各自的特点，它们之间的区别如下：",-1),y=(0,e._)("ul",null,[(0,e._)("li",null,"ArrayBuffer 提供写入/编辑的能力，Blob 对象是不可变的，而 ArrayBuffer 是可以通过 TypedArrays 或 DataView 来操作。"),(0,e._)("li",null,"ArrayBuffer 是存在内存中的，可以直接操作。而 Blob 可以位于磁盘、高速缓存内存和其他不可用的位置。"),(0,e._)("li",null,"虽然 Blob 可以直接作为参数传递给其他函数，比如 window.URL.createObjectURL()。但是，你可能仍需要 FileReader 之类的 File API 才能与 Blob 一起使用。"),(0,e._)("li",null,[(0,e.Uk)("Blob 与 ArrayBuffer 对象之间是可以相互转化的： "),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("使用 FileReader 的 "),(0,e._)("code",null,"readAsArrayBuffer()"),(0,e.Uk)(" 方法，可以把 Blob 对象转换为 ArrayBuffer 对象；")]),(0,e._)("li",null,[(0,e.Uk)("使用 Blob 构造函数，如 "),(0,e._)("code",null,"new Blob([new Uint8Array(data])"),(0,e.Uk)(";，可以把 ArrayBuffer 对象转换为 Blob 对象。")])])])],-1),x=(0,e._)("p",null,"在 AJAX 场景下可以通过 xhr.responseType 设置不同的数据类型",-1),g=(0,e._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e._)("pre",{class:"language-javascript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token constant"},"GET"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},[(0,e.Uk)("url"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" callback")]),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"let"),(0,e.Uk)(" xhr "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"XMLHttpRequest"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n  xhr"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"open"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},'"GET"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" url"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"true"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n  xhr"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("responseType "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"arraybuffer"'),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},'// or xhr.responseType = "blob";'),(0,e.Uk)("\n  xhr"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"send"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n  xhr"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function-variable function"},"onload"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"function"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token parameter"},"e"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("xhr"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("status "),(0,e._)("span",{class:"token operator"},"!="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"200"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token function"},"alert"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},'"Unexpected status code "'),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(" xhr"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("status "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'" for "'),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(" url"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n      "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"false"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token function"},"callback"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"Uint8Array"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("xhr"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("response"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"// or new Blob([xhr.response]);"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br")])],-1),R={render:function(n,a){return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,o,r,c,u,p,k,_,i,b,U,d,f,h,B,m,y,x,g],64)}}},8821:(n,a,s)=>{n.exports=s.p+"assets/img/blob.02406112.jpg"}}]);