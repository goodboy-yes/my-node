"use strict";(self.webpackChunkmy_notes=self.webpackChunkmy_notes||[]).push([[334],{8074:(e,s,a)=>{a.r(s),a.d(s,{data:()=>n});const n={key:"v-374cb97a",path:"/git/basic-command.html",title:"命令",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"基本命令",slug:"基本命令",children:[]},{level:2,title:"修改提交作者和邮箱",slug:"修改提交作者和邮箱",children:[]}],filePathRelative:"git/basic-command.md",git:{updatedTime:1639928438e3,contributors:[]}}},681:(e,s,a)=>{a.r(s),a.d(s,{default:()=>i});const n=(0,a(6252).uE)('<h1 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h1><h2 id="基本命令" tabindex="-1"><a class="header-anchor" href="#基本命令" aria-hidden="true">#</a> 基本命令</h2><ul><li><code>git init</code>：用于初始化一个 Git 仓库</li><li><code>git status</code>：用于查看当前 Git 状态</li><li><code>git log</code>：查看提交过的 git 历史，按 q 退出</li><li><code>git add</code>：它的使用场景有三个：1、将一个尚未被 Git 跟踪的文件纳入 Git 跟踪；2、将一个已经被 Git 跟踪的文件且这个文件处于修改状态，通过 add，可以将它纳入暂存区；3、将 merge 或者 rebase 后产生的冲突文件标记为冲突已解决。</li><li><code>git commit</code>：将暂存区内容纳入 Git 提交记录</li><li><code>git restore</code>：取消对某个文件的修改</li><li><code>git diff</code>：查看文件修改详情</li><li><code>git checkout</code>：切换分支</li><li><code>git branch</code>：新建分支</li><li><code>git merge</code>：合并分支</li><li><code>git stash</code>：临时保存当前分支的工作状态，方便切换到其它分支。恢复-<code>git stash pop</code></li><li><code>git revert</code>：撤销某次修改，此次操作之前和之后的 commit 和 history 都会保留，并且把这次撤销，作为一次最新的提交</li><li><code>git reset</code>：回退版本，可以遗弃不再使用的提交</li></ul><h2 id="修改提交作者和邮箱" tabindex="-1"><a class="header-anchor" href="#修改提交作者和邮箱" aria-hidden="true">#</a> 修改提交作者和邮箱</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// 设置全局\n<span class="token function">git</span> config --global user.name <span class="token string">&quot;Author Name&quot;</span>\n<span class="token function">git</span> config --global user.email <span class="token string">&quot;Author Email&quot;</span>\n\n// 或者设置本地项目库配置\n<span class="token function">git</span> config user.name <span class="token string">&quot;Author Name&quot;</span>\n<span class="token function">git</span> config user.email <span class="token string">&quot;Author Email&quot;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>只设置当次提交</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> commit --author<span class="token operator">=</span><span class="token string">&quot;author &lt;email@address.com&gt;&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',7),i={render:function(e,s){return n}}}}]);