"use strict";(self.webpackChunkmy_notes=self.webpackChunkmy_notes||[]).push([[781],{219:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-dc3b2a6e",path:"/react/",title:"React",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"定义组件",slug:"定义组件",children:[]},{level:2,title:"JSX",slug:"jsx",children:[{level:3,title:"返回单个根元素",slug:"返回单个根元素",children:[]},{level:3,title:"关闭所有标签",slug:"关闭所有标签",children:[]},{level:3,title:"camelCase 大部分的东西",slug:"camelcase-大部分的东西",children:[]}]}],filePathRelative:"react/README.md",git:{updatedTime:1639647138e3,contributors:[]}}},3069:(a,n,s)=>{s.r(n),s.d(n,{default:()=>e});const t=(0,s(6252).uE)('<h1 id="react" tabindex="-1"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h1><h2 id="定义组件" tabindex="-1"><a class="header-anchor" href="#定义组件" aria-hidden="true">#</a> 定义组件</h2><p>React 允许您将标记、CSS 和 JavaScript 组合成自定义“组件” ，即应用程序的可重用 UI 元素。React 组件是一个 JavaScript 函数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// App.js</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">&quot;https://i.imgur.com/MK3eW3Am.jpg&quot;</span> alt<span class="token operator">=</span><span class="token string">&quot;Katherine Johnson&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 或者 如果标记与 return 语句不在同一行，则必须将其括在一对括号中，如果没有括号，后面几行的任何代码return 都将被忽略！</span>\n<span class="token comment">// return (</span>\n<span class="token comment">//   &lt;div&gt;</span>\n<span class="token comment">//     &lt;img src=&quot;https://i.imgur.com/MK3eW3As.jpg&quot; alt=&quot;Katherine Johnson&quot; /&gt;</span>\n<span class="token comment">//   &lt;/div&gt;</span>\n<span class="token comment">// );</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>React 组件是常规的 JavaScript 函数，但它们的名称必须以大写字母开头，否则它们将不起作用！</p></blockquote><p>大多数 React 应用程序一直使用组件。这意味着您不仅可以将组件用于可重复使用的部分，例如按钮，还可以用于较大的部分，例如侧边栏、列表以及最终的完整页面！<strong>组件是组织 UI 代码和标记的一种便捷方式</strong>，即使其中一些仅使用一次。</p><h2 id="jsx" tabindex="-1"><a class="header-anchor" href="#jsx" aria-hidden="true">#</a> JSX</h2><p>JSX 是 JavaScript 的语法扩展，允许您在 JavaScript 文件中编写类似 HTML 的标记。React 组件用 JSX 将渲染逻辑与标记组合在一起，因为它们是相关的。</p><h3 id="返回单个根元素" tabindex="-1"><a class="header-anchor" href="#返回单个根元素" aria-hidden="true">#</a> 返回单个根元素</h3><p>要从一个组件返回多个元素，请将它们用单个父标签包裹起来</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hedy Lamarr&#39;s Todos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    ...\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>如果不想额外添加<code>&lt;div&gt;</code>，可以改为&lt;&gt;&lt;/&gt;</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;&gt;\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hedy Lamarr&#39;s Todos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    ...\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n&lt;/&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>这个空标签称为 React 片段。React 片段让您可以对事物进行分组，而不会在浏览器 HTML 树中留下任何痕迹。JSX 看起来像 HTML，但在底层它被转换成普通的 JavaScript 对象。</p></blockquote><h3 id="关闭所有标签" tabindex="-1"><a class="header-anchor" href="#关闭所有标签" aria-hidden="true">#</a> 关闭所有标签</h3><p>JSX 需要显式关闭标签，如<code>&lt;img /&gt;</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;&gt;\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>\n    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://i.imgur.com/yXOvdOSs.jpg<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Hedy Lamarr<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>photo<span class="token punctuation">&quot;</span></span>\n   <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Invent new traffic lights<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Rehearse a movie scene<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Improve the spectrum technology<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n&lt;/&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="camelcase-大部分的东西" tabindex="-1"><a class="header-anchor" href="#camelcase-大部分的东西" aria-hidden="true">#</a> camelCase 大部分的东西</h3><p><code>JSX</code> 变成了 JavaScript，用 <code>JSX</code> 编写的属性成为 JavaScript 对象的键。 JavaScript 对变量名有限制。例如，它们的名称不能包含破折号。</p><p>这就是为什么在 <code>React</code> 中，许多 <code>HTML</code> 和 <code>SVG</code> 属性都是用驼峰命名法编写的。例如，使用 <code>stroke-width</code> 代替 <code>strokeWidth</code>。因为 class 是保留字，所以在 <code>React</code> 中你可以写成 <code>className</code></p>',20),e={render:function(a,n){return t}}}}]);