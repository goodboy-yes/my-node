import{_ as e,o as a,c as t,e as s}from"./app-ZrMgA43q.js";const r={},n=s(`<h1 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h1><p>数组（Array）是一种<strong>线性表数据结构</strong>。它用一组<strong>连续的内存空间</strong>，来<strong>存储一组具有相同类型</strong>的数据。</p><p>线性表就是数据排成像一条线一样的结构。每个线性表上的数据最多只有前和后两个方向。其实除了数组，<strong>链表、队列、栈</strong>等也是线性表结构。</p><p>与它相对立的概念是<strong>非线性表</strong>，比如<strong>二叉树、堆、图</strong>等。之所以叫非线性，是因为，在非线性表中，数据之间并不是简单的前后关系。</p><h2 id="随机访问" tabindex="-1"><a class="header-anchor" href="#随机访问"><span>随机访问</span></a></h2><p>数组用一组<strong>连续的内存空间</strong>，来<strong>存储一组具有相同类型</strong>的数据，因此有一个堪称“杀手锏”的特性：“随机访问”。</p><p>计算机会给每个内存单元分配一个地址，计算机通过地址来访问内存中的数据。当计算机需要随机访问数组中的某个元素时，它会首先通过下面的寻址公式，计算出该元素存储的内存地址：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>a[i]_address = base_address + i * data_type_size
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中 data_type_size 表示数组中每个元素的大小</p><p>但连续的内存空间也让数组的很多操作变得非常低效，比如要想在数组中删除、插入一个数据，为了保证连续性，就需要做大量的数据搬移工作。</p><h2 id="为什么大多数编程语言中-数组要从-0-开始编号" tabindex="-1"><a class="header-anchor" href="#为什么大多数编程语言中-数组要从-0-开始编号"><span>为什么大多数编程语言中，数组要从 0 开始编号</span></a></h2><p>一种说法是从数组存储的内存模型上来看，“下标”最确切的定义应该是“偏移（offset）”。前面也讲到，如果用 a 来表示数组的首地址，a[0]就是偏移为 0 的位置，也就是首地址，a[k]就表示偏移 k 个 type_size 的位置，所以计算 a[k]的内存地址只需要用这个公式</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>a[k]_address = base_address + k * data_type_size
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不过最主要的原因可能是历史原因，C 语言设计者用 0 开始计数数组下标，之后的 Java、JavaScript 等高级语言都效仿了 C 语言</p>`,14),i=[n];function d(o,l){return a(),t("div",null,i)}const p=e(r,[["render",d],["__file","array.html.vue"]]),g=JSON.parse('{"path":"/dataStructure-algorithms/array.html","title":"数组","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"随机访问","slug":"随机访问","link":"#随机访问","children":[]},{"level":2,"title":"为什么大多数编程语言中，数组要从 0 开始编号","slug":"为什么大多数编程语言中-数组要从-0-开始编号","link":"#为什么大多数编程语言中-数组要从-0-开始编号","children":[]}],"git":{"updatedTime":1708502740000,"contributors":[{"name":"guokc","email":"guokc@tsintergy.com","commits":1}]},"filePathRelative":"dataStructure-algorithms/array.md"}');export{p as comp,g as data};
