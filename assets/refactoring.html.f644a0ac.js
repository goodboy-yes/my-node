import{e as n}from"./app.7f2fdd53.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u91CD\u6784" tabindex="-1"><a class="header-anchor" href="#\u91CD\u6784" aria-hidden="true">#</a> \u91CD\u6784</h1><h2 id="\u7F16\u7801\u98CE\u683C" tabindex="-1"><a class="header-anchor" href="#\u7F16\u7801\u98CE\u683C" aria-hidden="true">#</a> \u7F16\u7801\u98CE\u683C</h2><h3 id="\u547D\u540D" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D" aria-hidden="true">#</a> \u547D\u540D</h3><h4 id="\u51FD\u6570\u547D\u540D" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u547D\u540D" aria-hidden="true">#</a> \u51FD\u6570\u547D\u540D</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5BF9\u4E8E\u8FD4\u56DE boolean \u7684\u51FD\u6570\u4EE5 should/is/can/has \u5F00\u5934</span>
<span class="token keyword">function</span> <span class="token function">shouldShowFriendsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">canCreateDocuments</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">hasLicense</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>

<span class="token comment">// \u52A8\u8BCD\u5F00\u5934</span>
<span class="token keyword">function</span> <span class="token function">sendEmailToUser</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="\u4F7F\u7528\u6709\u610F\u4E49\u7684\u53D8\u91CF\u4EE3\u66FF\u6570\u7EC4\u4E0B\u6807" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6709\u610F\u4E49\u7684\u53D8\u91CF\u4EE3\u66FF\u6570\u7EC4\u4E0B\u6807" aria-hidden="true">#</a> \u4F7F\u7528\u6709\u610F\u4E49\u7684\u53D8\u91CF\u4EE3\u66FF\u6570\u7EC4\u4E0B\u6807</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
<span class="token keyword">const</span> address <span class="token operator">=</span> <span class="token string">&quot;One Infinite Loop, Cupertino 95014&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> cityZipCodeRegex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[^,\\\\]+[,\\\\\\s]+(.+?)\\s*(\\d{5})?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token function">saveCityZipCode</span><span class="token punctuation">(</span>
  address<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>cityZipCodeRegex<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  address<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>cityZipCodeRegex<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

\u{1F44D}
<span class="token keyword">const</span> <span class="token punctuation">[</span>_<span class="token punctuation">,</span> city<span class="token punctuation">,</span> zipCode<span class="token punctuation">]</span> <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>cityZipCodeRegex<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">saveCityZipCode</span><span class="token punctuation">(</span>city<span class="token punctuation">,</span> zipCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="\u907F\u514D\u786C\u7F16\u7801\u503C" tabindex="-1"><a class="header-anchor" href="#\u907F\u514D\u786C\u7F16\u7801\u503C" aria-hidden="true">#</a> \u907F\u514D\u786C\u7F16\u7801\u503C</h4><p>\u786E\u4FDD\u58F0\u660E\u6709\u610F\u4E49\u4E14\u53EF\u641C\u7D22\u7684\u5E38\u91CF\uFF0C\u800C\u4E0D\u662F\u76F4\u63A5\u63D2\u5165\u4E00\u4E2A\u5E38\u91CF\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
<span class="token function">setTimeout</span><span class="token punctuation">(</span>blastOff<span class="token punctuation">,</span> <span class="token number">86400000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

\u{1F44D}
<span class="token keyword">const</span> <span class="token constant">MILLISECONDS_PER_DAY</span> <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">//86400000;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>blastOff<span class="token punctuation">,</span> <span class="token constant">MILLISECONDS_PER_DAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="\u7279\u5B9A\u7684\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u7279\u5B9A\u7684\u53D8\u91CF" aria-hidden="true">#</a> \u7279\u5B9A\u7684\u53D8\u91CF</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
<span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u770B\u4E0D\u51FA\u4E3A\u4EC0\u4E48\u8981\u5C0F\u4E8E8</span>
 <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

\u{1F44D}
<span class="token keyword">const</span> <span class="token constant">MAX_INPUT_LENGTH</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token constant">MAX_INPUT_LENGTH</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4E00\u76EE\u4E86\u7136\uFF0C\u4E0D\u80FD\u8D85\u8FC7\u6700\u5927\u8F93\u5165\u957F\u5EA6</span>
 <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h3><h4 id="\u51FD\u6570\u53C2\u6570\u591A\u4E8E\u4E24\u4E2A\u4F7F\u7528\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u53C2\u6570\u591A\u4E8E\u4E24\u4E2A\u4F7F\u7528\u89E3\u6784" aria-hidden="true">#</a> \u51FD\u6570\u53C2\u6570\u591A\u4E8E\u4E24\u4E2A\u4F7F\u7528\u89E3\u6784</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
<span class="token keyword">function</span> <span class="token function">createMenu</span><span class="token punctuation">(</span><span class="token parameter">title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> buttonText<span class="token punctuation">,</span> cancellable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token function">createMenu</span><span class="token punctuation">(</span><span class="token string">&quot;Foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Baz&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

\u{1F44D}
<span class="token keyword">function</span> <span class="token function">createMenu</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> buttonText<span class="token punctuation">,</span> cancellable <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token function">createMenu</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token string">&quot;Foo&quot;</span><span class="token punctuation">,</span>
  body<span class="token operator">:</span> <span class="token string">&quot;Bar&quot;</span><span class="token punctuation">,</span>
  buttonText<span class="token operator">:</span> <span class="token string">&quot;Baz&quot;</span><span class="token punctuation">,</span>
  cancellable<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u63A8\u8350\u4F7F\u7528\u89E3\u6784\u7684\u51E0\u4E2A\u539F\u56E0:</p><ul><li>\u770B\u5230\u51FD\u6570\u7B7E\u540D\u53EF\u4EE5\u7ACB\u5373\u4E86\u89E3\u6709\u54EA\u4E9B\u53C2\u6570</li><li>\u89E3\u6784\u80FD\u514B\u9686\u4F20\u9012\u5230\u51FD\u6570\u4E2D\u7684\u53C2\u6570\u5BF9\u8C61\u7684\u503C(\u6D45\u514B\u9686)\uFF0C\u6709\u52A9\u4E8E\u9632\u6B62\u526F\u4F5C\u7528.</li><li>linter \u53EF\u4EE5\u63D0\u793A\u6709\u54EA\u4E9B\u53C2\u6570\u672A\u88AB\u4F7F\u7528</li></ul><h4 id="\u590D\u6742\u51FD\u6570\u8FDB\u884C\u62C6\u5206" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u51FD\u6570\u8FDB\u884C\u62C6\u5206" aria-hidden="true">#</a> \u590D\u6742\u51FD\u6570\u8FDB\u884C\u62C6\u5206</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
<span class="token keyword">function</span> <span class="token function">parseBetterJSAlternative</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token constant">REGEXES</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> statements <span class="token operator">=</span> code<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> tokens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token constant">REGEXES</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">REGEX</span></span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    statements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">statement</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> ast <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  tokens<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">token</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// lex...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  ast<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// parse...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

\u{1F44D}
<span class="token keyword">function</span> <span class="token function">parseBetterJSAlternative</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> tokens <span class="token operator">=</span> <span class="token function">tokenize</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> syntaxTree <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>tokens<span class="token punctuation">)</span><span class="token punctuation">;</span>
  syntaxTree<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// parse...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">tokenize</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token constant">REGEXES</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> statements <span class="token operator">=</span> code<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> tokens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token constant">REGEXES</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">REGEX</span></span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    statements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">statement</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token comment">/* ... */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> tokens<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token parameter">tokens</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> syntaxTree <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  tokens<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">token</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    syntaxTree<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token comment">/* ... */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> syntaxTree<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><h4 id="\u6CE8\u610F\u51FD\u6570\u7684\u526F\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F\u51FD\u6570\u7684\u526F\u4F5C\u7528" aria-hidden="true">#</a> \u6CE8\u610F\u51FD\u6570\u7684\u526F\u4F5C\u7528</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
<span class="token keyword">const</span> <span class="token function-variable function">addItemToCart</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cart<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  cart<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> item<span class="token punctuation">,</span> date<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

\u{1F44D}
<span class="token keyword">const</span> <span class="token function-variable function">addItemToCart</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cart<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>cart<span class="token punctuation">,</span> <span class="token punctuation">{</span> item<span class="token punctuation">,</span> date<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="\u907F\u514D\u8FC7\u591A\u5206\u652F" tabindex="-1"><a class="header-anchor" href="#\u907F\u514D\u8FC7\u591A\u5206\u652F" aria-hidden="true">#</a> \u907F\u514D\u8FC7\u591A\u5206\u652F</h4><p>\u5C3D\u65E9 return \u4F1A\u4F7F\u4F60\u7684\u4EE3\u7801\u7EBF\u6027\u5316\u3001\u66F4\u5177\u53EF\u8BFB\u6027\u4E14\u4E0D\u90A3\u4E48\u590D\u6742\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
<span class="token keyword">function</span> <span class="token function">addUserService</span><span class="token punctuation">(</span><span class="token parameter">db<span class="token punctuation">,</span> user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>db<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>db<span class="token punctuation">.</span><span class="token function">isConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;No user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;No database connection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;No database&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

\u{1F44D}
<span class="token keyword">function</span> <span class="token function">addUserService</span><span class="token punctuation">(</span><span class="token parameter">db<span class="token punctuation">,</span> user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>db<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;No database&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>db<span class="token punctuation">.</span><span class="token function">isConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;No database connection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;No user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h4 id="\u4F18\u5148\u4F7F\u7528-map-\u800C\u4E0D\u662F-switch-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5148\u4F7F\u7528-map-\u800C\u4E0D\u662F-switch-\u8BED\u53E5" aria-hidden="true">#</a> \u4F18\u5148\u4F7F\u7528 map \u800C\u4E0D\u662F switch \u8BED\u53E5</h4><p>\u65E2\u80FD\u51CF\u5C11\u590D\u6742\u5EA6\u53C8\u80FD\u63D0\u5347\u6027\u80FD\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
<span class="token keyword">const</span> <span class="token function-variable function">getColorByStatus</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&quot;success&quot;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;failure&quot;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;warning&quot;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token string">&quot;yellow&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;loading&quot;</span><span class="token operator">:</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

\u{1F44D}
<span class="token keyword">const</span> statusColors <span class="token operator">=</span> <span class="token punctuation">{</span>
  success<span class="token operator">:</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span>
  failure<span class="token operator">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span>
  warning<span class="token operator">:</span> <span class="token string">&quot;yellow&quot;</span><span class="token punctuation">,</span>
  loading<span class="token operator">:</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getColorByStatus</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> statusColors<span class="token punctuation">[</span>status<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">;</span>

\u{1F44D}
<span class="token comment">//Map \u5219\u66F4\u4E3A\u5F3A\u5927\uFF0C\u5BF9\u8C61\u7684\u952E\u53EA\u80FD\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u6216\u7B26\u53F7\uFF0C\u4F46 Map \u7684\u952E\u53EF\u4EE5\u662F\u5BF9\u8C61\u6216\u66F4\u591A\uFF0C\u53EF\u4EE5\u4F5C\u4E3A\u6761\u4EF6\u8054\u5408\u5224\u65AD\u3002</span>
<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^sign_[1-3]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^sign_5$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">//...</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> action <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>actions<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> key<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">sign_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
action<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h4 id="\u4F20\u53C2\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#\u4F20\u53C2\u8BF4\u660E" aria-hidden="true">#</a> \u4F20\u53C2\u8BF4\u660E</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
page<span class="token punctuation">.</span><span class="token function">getSVG</span><span class="token punctuation">(</span>api<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true\u548Cfalse\u65E0\u610F\u4E49</span>

\u{1F44D}
page<span class="token punctuation">.</span><span class="token function">getSVG</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 imageApi<span class="token operator">:</span> api<span class="token punctuation">,</span>
 includePageBackground<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u4E00\u76EE\u4E86\u7136</span>
 compress<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a> \u5176\u4ED6</h3><h4 id="\u8D4B\u503C\u53D8\u91CF\u515C\u5E95" tabindex="-1"><a class="header-anchor" href="#\u8D4B\u503C\u53D8\u91CF\u515C\u5E95" aria-hidden="true">#</a> \u8D4B\u503C\u53D8\u91CF\u515C\u5E95</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u{1F44E}
<span class="token keyword">let</span> lastName <span class="token operator">=</span> fullName<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>lastName<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token constant">MIN_NAME_LENGTH</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// fullName[1]\u53EF\u80FD\u4E3Aundefined</span>
<span class="token punctuation">}</span>

\u{1F44D}
<span class="token keyword">let</span> lastName <span class="token operator">=</span> fullName<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">// lastName\u7684\u53D8\u91CF\u7C7B\u578B\u8FD8\u662Fnumber\uFF0Cnumber\u539F\u578B\u94FE\u4E0A\u7684\u7279\u6027\u90FD\u80FD\u4F7F\u7528\uFF0C\u4E0D\u4F1A\u62A5\u9519\u3002\u4E0D\u4F1A\u53D8\u6210undefined\u3002</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>lastName<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token constant">MIN_NAME_LENGTH</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u5176\u4ED6-1" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6-1" aria-hidden="true">#</a> \u5176\u4ED6</h2><h4 id="\u79FB\u9664\u91CD\u590D\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u79FB\u9664\u91CD\u590D\u4EE3\u7801" aria-hidden="true">#</a> \u79FB\u9664\u91CD\u590D\u4EE3\u7801</h4><p>\u91CD\u590D\u4EE3\u7801\u5728 Bad Smell \u4E2D\u6392\u5728\u7B2C\u4E00\u4F4D\uFF0C\u6240\u4EE5\uFF0C\u7AED\u5C3D\u4F60\u7684\u5168\u529B\u53BB\u907F\u514D\u91CD\u590D\u4EE3\u7801\u3002\u56E0\u4E3A\u5B83\u610F\u5473\u7740\u5F53\u4F60\u9700\u8981\u4FEE\u6539\u4E00\u4E9B\u903B\u8F91\u65F6\u4F1A\u6709\u591A\u4E2A\u5730\u65B9\u9700\u8981\u4FEE\u6539\u3002</p><h4 id="\u5199\u597D\u4E1A\u52A1\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#\u5199\u597D\u4E1A\u52A1\u6CE8\u91CA" aria-hidden="true">#</a> \u5199\u597D\u4E1A\u52A1\u6CE8\u91CA</h4><p>\u4F18\u79C0\u7684\u4EE3\u7801\u547D\u540D\u65E0\u9700\u6CE8\u91CA\uFF0C\u4EE3\u7801\u5373\u6CE8\u91CA\uFF0C\u52A0\u4E0A\u6CE8\u91CA\u5C31\u4F1A\u5197\u4F59\u3002\u8FD9\u65F6\u67D0\u4E2A\u4E1A\u52A1\u7684\u903B\u8F91\u5C31\u79BB\u4E0D\u5F00\u51C6\u786E\u7684\u6CE8\u91CA\uFF0C\u8FD9\u6837\u53EF\u4EE5\u5E2E\u52A9\u6211\u4EEC\u66F4\u52A0\u7406\u89E3\u4E1A\u52A1\u7684\u8BE6\u7EC6\u903B\u8F91\u3002\u9700\u8981\u8981\u6C42\u7684\u662F\u4EE3\u7801\u6539\u52A8\u6CE8\u91CA\u4E5F\u8981\u968F\u4E4B\u66F4\u65B0</p>`,37);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
