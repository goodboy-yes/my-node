import{_ as p,r as l,o as c,c as o,a as n,b as s,d as t,e}from"./app-CtA61ec0.js";const i="/my-notes/assets/css-triggers-Uln0h-o4.png",u={},r=e(`<h1 id="合成层" tabindex="-1"><a class="header-anchor" href="#合成层"><span>合成层</span></a></h1><h2 id="浏览器渲染流程" tabindex="-1"><a class="header-anchor" href="#浏览器渲染流程"><span>浏览器渲染流程</span></a></h2><ul><li>浏览器下载并解析 HTML。</li><li>构建 CSSOM 树和 DOM 树。</li><li>DOM 与 CSSOM 合并成一个 Render 树。</li><li>有了 Render Tree，浏览器可以知道各个节点的 CSS 定义以及他们的从属关系，从而去计算出每个节点在屏幕中的位置，生成一个足够大的画布来容纳所有元素。</li><li>根据浏览器提供各层的信息合成图层，显示到屏幕上，合成图层中一些特殊的图层被认为是<strong>合成层（Compositing Layers）</strong></li></ul><h2 id="什么是合成层" tabindex="-1"><a class="header-anchor" href="#什么是合成层"><span>什么是合成层</span></a></h2><p>首先合成就是将页面的各个部分分成多个层、单独光栅化（浏览器根据文档的结构、每个元素的样式、页面的几何形状和绘制顺序转换为屏幕上的像素的过程）它们并在合成器线程中合成为一个页面的技术。</p><p>在 Chrome 开发工具中打开自定义菜单，然后在 More tools 中选择 Layers 选项可以看到当前页面的图层结构</p><p>一些特定属性的渲染层，会被浏览器自动提升为合成层。合成层拥有单独的图层（GraphicsLayer），和其他图层之间无不影响。而其它不是合成层的渲染层，则和第一个拥有图层的父层共用一个，也就是普通文档流中的内容</p><p>下面是一些常见的提升为合成层的属性：</p><ul><li>设置 <code>transform: translateZ(0)</code>，注意它必须是 <code>translateZ</code>，因为它使用 GPU 来计算 <code>perspective distortion</code>（透视失真）。<code>perspective</code> 在 3D 设计中是一个重要的属性，如果你使用 <code>translateX</code> 或 <code>translateY</code>，元素将会被绘制在普通文档流中</li><li><code>backface-visibility: hidden</code> 指定当元素背面朝向观察者时是否可见。</li><li><code>will-change</code> 该属性告诉浏览器该元素会有哪些变化，这样浏览器可以提前做好对应的优化准备工作。当该属性的值为 <code>opacity</code>、<code>transform</code>、<code>top</code>、<code>left</code>、<code>bottom</code>、<code>right</code> 时。</li><li><code>video</code>、<code>canvas</code>、<code>iframe</code> 等元素。</li></ul><h2 id="关于隐式合成" tabindex="-1"><a class="header-anchor" href="#关于隐式合成"><span>关于隐式合成</span></a></h2><p>一个或多个非合成元素应出现在堆叠顺序上的合成元素之上，会被提升为合成层。如果多个渲染层同一个合成层重叠时，这些渲染层会被压缩到一个图层中，以防止由于重叠原因导致出现的层爆炸</p><p>如下面的示例，#C 设置了 will-change 被提升为合成层，#A 和#B 的 index 属性比#C 大并且与其重叠，#A 和#B 会提升为一个合成层</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
      <span class="token selector">#A,
      #B,
      #C</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token selector">#C</span> <span class="token punctuation">{</span>
        <span class="token property">left</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>
        <span class="token property">top</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>
        <span class="token property">z-index</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span>
        <span class="token property">will-change</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
        <span class="token property">animation</span><span class="token punctuation">:</span> move 1s linear<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token selector">#A</span> <span class="token punctuation">{</span>
        <span class="token property">z-index</span><span class="token punctuation">:</span> 200<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token selector">#B</span> <span class="token punctuation">{</span>
        <span class="token property">left</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
        <span class="token property">top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
        <span class="token property">z-index</span><span class="token punctuation">:</span> 200<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token atrule"><span class="token rule">@keyframes</span> move</span> <span class="token punctuation">{</span>
        <span class="token selector">form</span> <span class="token punctuation">{</span>
          <span class="token property">left</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token selector">to</span> <span class="token punctuation">{</span>
          <span class="token property">left</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>A<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>B<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>C<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="合成层的利弊" tabindex="-1"><a class="header-anchor" href="#合成层的利弊"><span>合成层的利弊</span></a></h2><p>渲染层的提示带来的好处：</p><ul><li>开启硬件加速，合成层的位图会交由 GPU 合成，相比 CPU 处理要快。</li><li>合成层发生 repaint 的时候，不会影响其他图层。</li><li>对于 transform 和 opacity 效果，不会触发 layout 和 paint。</li></ul><p>当然合成层也存在一些问题：</p><ul><li>如果我们把所有渲染工作都交给 GPU，在现有的优化下，它会导致渲染内存占用比大幅度提升，反而出现负面的效果。</li><li>另外隐式合成容易产生大量我们意料之外的合成层，过大的内存占用，会让页面变的卡顿，性能优化适得其反。</li></ul><h2 id="合成层的使用" tabindex="-1"><a class="header-anchor" href="#合成层的使用"><span>合成层的使用</span></a></h2><h3 id="使用-transform-实现动画" tabindex="-1"><a class="header-anchor" href="#使用-transform-实现动画"><span>使用 transform 实现动画</span></a></h3><p>在我们日常开发中经常会实现一些动画，有时候我们可能会选择改变 <code>top/left</code> 去实现，那么这个节点的渲染会发生在普通文档流中。而使用 <code>transform</code> 和 <code>opacity</code> 实现动画能够让节点被放置到一个独立合成层中进行渲染绘制，动画不会影响其他图层，并且 GPU 渲染相比 CPU 能够更快，这会让你的动画变的更加流畅</p>`,21),d={href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"},k=e('<p><img src="'+i+'" alt="css-triggers"></p><h3 id="谨慎使用-will-change" tabindex="-1"><a class="header-anchor" href="#谨慎使用-will-change"><span>谨慎使用 will-change</span></a></h3><p>除非你的元素的真的存在某个属性马上会发生变化，例如 <code>transform</code>，你可以使用 <code>will-change: transform</code> 告知浏览器，根据您打算更改的元素，浏览器可能可以预先安排，元素的改变和渲染速度都会变得更快。</p><p>可是这些属性可能会给你带来一些副作用，**任何带有 <code>position: fixed</code> 或者 <code>position: absolute</code> 的子元素将会相对于设置了 <code>will-change: transform</code> 的元素进行相对定位。**除此之外浏览器用来为 <code>will-change</code> 属性做的更进一步的优化常常会耗费更多的资源，如果你将它施加在过多属性上显然是一个浪费，更甚者非常过度的使用可能会造成页面相应速度的变慢或者直接崩溃。</p><h3 id="减小合成层绘制区域" tabindex="-1"><a class="header-anchor" href="#减小合成层绘制区域"><span>减小合成层绘制区域</span></a></h3><p>合成层的绘制区域大小，很大程度上影响了它的内存占用。 我们可以设置小的尺寸，通过 <code>transform: scale()</code>在用户看不到任何区别的前提下节省大量的内存。</p>',6),v={href:"https://mp.weixin.qq.com/s?__biz=MzI1NTg3NzcwNQ==&mid=2247485354&idx=1&sn=32bbe6790588f0d5cdc438a4402cbd55&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"};function m(g,h){const a=l("ExternalLinkIcon");return c(),o("div",null,[r,n("p",null,[s("如果你无法确定使用这个属性是否合理，在你将任何 CSS 属性用于实现动画之前，你可以在 "),n("a",d,[s("csstriggers"),t(a)]),s(" 上查看该属性对渲染管道的影响。")]),k,n("blockquote",null,[n("p",null,[s("参考链接："),n("a",v,[s("浏览器渲染魔法之合成层"),t(a)])])])])}const f=p(u,[["render",m],["__file","compositing-layer.html.vue"]]),y=JSON.parse('{"path":"/css/compositing-layer.html","title":"合成层","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"浏览器渲染流程","slug":"浏览器渲染流程","link":"#浏览器渲染流程","children":[]},{"level":2,"title":"什么是合成层","slug":"什么是合成层","link":"#什么是合成层","children":[]},{"level":2,"title":"关于隐式合成","slug":"关于隐式合成","link":"#关于隐式合成","children":[]},{"level":2,"title":"合成层的利弊","slug":"合成层的利弊","link":"#合成层的利弊","children":[]},{"level":2,"title":"合成层的使用","slug":"合成层的使用","link":"#合成层的使用","children":[{"level":3,"title":"使用 transform 实现动画","slug":"使用-transform-实现动画","link":"#使用-transform-实现动画","children":[]},{"level":3,"title":"谨慎使用 will-change","slug":"谨慎使用-will-change","link":"#谨慎使用-will-change","children":[]},{"level":3,"title":"减小合成层绘制区域","slug":"减小合成层绘制区域","link":"#减小合成层绘制区域","children":[]}]}],"git":{"updatedTime":1708503944000,"contributors":[{"name":"guokc","email":"guokc@tsintergy.com","commits":1}]},"filePathRelative":"css/compositing-layer.md"}');export{f as comp,y as data};
